{
  "openapi": "3.0.3",
  "info": {
    "title": "API de usuarios con direcciones",
    "description": "Esta es una API sobre el uso de los usuarios con sus direcciones",
    "contact": {
      "email": "hitoito.sanchez@gmail.com",
      "name": "Hiroito Sanchez"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    {
      "url": "http://127.0.0.1:5000"
    }
  ],
  "tags": [
    {
      "name": "usuarios",
      "description": "Todos los endpoitns para trabajar con los usuarios",
      "externalDocs": {
        "description": "Para mas info",
        "url": "https://www.google.com"
      }
    },
    {
      "name": "direcciones",
      "description": "Las direcciones de los usuarios"
    }
  ],
  "paths": {
    "/usuarios": {
      "get": {
        "tags": [
          "usuarios"
        ],
        "summary": "Devolvera todos los usuarios creados",
        "description": "Devolvera todos los usuarios habilitados y no habilitados",
        "operationId": "getUsuarios",
        "responses": {
          "200": {
            "description": "Operacion exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Usuario"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usuario": {
      "post": {
        "tags": [
          "usuarios"
        ],
        "summary": "Crea un nuevo usuario",
        "description": "Endpoint para crear un nuevo usuario",
        "operationId": "createUsuario",
        "requestBody": {
          "description": "la data del nuevo usuario",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "example": "Hiroito"
                  },
                  "apellido": {
                    "type": "string",
                    "example": "sanchez"
                  },
                  "correo": {
                    "type": "string",
                    "example": "hiroito.sanchez@gmail.com"
                  },
                  "sexo": {
                    "type": "string",
                    "example": "MASCULINO"
                  },
                  "fechaNacimiento": {
                    "type": "string",
                    "example": "1987-09-03T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuarion creado exitosamente",
            "content": {
              "application/Json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario creado exitosamente"
                    },
                    "content": {
                      "$ref": "#/components/schemas/Usuario"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usuario/{id}": {
      "put": {
        "tags": [
          "usuarios"
        ],
        "summary": "Actualizar un usuario",
        "description": "Actualizamos un usuario segun id",
        "operationId": "updateUsuario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del usuario a actualizar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "la data del nuevo usuario",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "example": "Hiroito"
                  },
                  "apellido": {
                    "type": "string",
                    "example": "sanchez"
                  },
                  "correo": {
                    "type": "string",
                    "example": "hiroito.sanchez@gmail.com"
                  },
                  "sexo": {
                    "type": "string",
                    "example": "MASCULINO"
                  },
                  "fechaNacimiento": {
                    "type": "string",
                    "example": "1987-09-03T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario actualizado exitosamente"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Si el usuario no existe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario no existe"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Usuario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "nombre": {
            "type": "string",
            "example": "Hiroito"
          },
          "apellido": {
            "type": "string",
            "example": "sanchez"
          },
          "correo": {
            "type": "string",
            "example": "hiroito.sanchez@gmail.com"
          },
          "sexo": {
            "type": "string",
            "example": "MASCULINO"
          },
          "fechaNacimiento": {
            "type": "string",
            "example": "1987-09-03T00:00:00.000Z"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}